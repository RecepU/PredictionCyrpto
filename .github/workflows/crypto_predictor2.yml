name: Run Crypto Predictor

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: pip install -r requirements.txt

    - name: Remove Existing Predictions File
      run: |
        if [ -f predictions.json ]; then
          echo "Deleting existing predictions.json"
          rm predictions.json
        fi      

    - name: Set Environment Variables
      env:
        COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        LUNARCRUSH_API_KEY: ${{ secrets.LUNARCRUSH_API_KEY }}
        CRYPTOCOMPARE_API_KEY: ${{ secrets.CRYPTOCOMPARE_API_KEY }}
        ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
      run: echo "Environment variables loaded."

    - name: Debug Environment Variables
      run: |
        echo "COINMARKETCAP_API_KEY: ${COINMARKETCAP_API_KEY}"
        echo "LUNARCRUSH_API_KEY: ${LUNARCRUSH_API_KEY}"
        echo "CRYPTOCOMPARE_API_KEY: ${CRYPTOCOMPARE_API_KEY}"
        echo "ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY}"
      env:
        COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        LUNARCRUSH_API_KEY: ${{ secrets.LUNARCRUSH_API_KEY }}
        CRYPTOCOMPARE_API_KEY: ${{ secrets.CRYPTOCOMPARE_API_KEY }}
        ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}

    - name: Run Predictor Script
      env:
        COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        LUNARCRUSH_API_KEY: ${{ secrets.LUNARCRUSH_API_KEY }}
        CRYPTOCOMPARE_API_KEY: ${{ secrets.CRYPTOCOMPARE_API_KEY }}
        ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
      run: python app.py  # Generate predictions.json

    - name: Debug Predictions File
      run: |
        echo "Contents of predictions.json:"
        cat predictions.json

    - name: Set Git Identity
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Set up GitHub Authentication
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}

    - name: Commit Local Changes
      run: |
        git add predictions.json .nojekyll
        git commit -m "Temporary commit for predictions.json" || echo "No changes to commit"

    - name: Pull Remote Changes
      run: git pull origin main --rebase

    - name: Deploy to GitHub Pages
      run: |
        touch .nojekyll
        git add predictions.json .nojekyll
        git commit -m "Update predictions.json" || echo "No changes to commit"
        git push origin main
